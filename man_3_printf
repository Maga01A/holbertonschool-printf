.\" Manpage for _printf function
.TH _PRINTF 3 "September 2025" "Holberton School" "Library Functions Manual"
.SH NAME
_printf \- custom implementation of the printf function
.SH SYNOPSIS
.B #include "main.h"
.br
.B int _printf(const char *format, ...);
.SH DESCRIPTION
The
.B _printf
function produces output according to a format string, similar to the C library function
.BR printf (3).
.PP
The
.I format
string is composed of zero or more directives. Ordinary characters are copied unchanged to the output stream. Conversion specifications start with the '%' character and are replaced as follows:
.TP
.B %c
Print a single character.
.TP
.B %s
Print a string of characters.
.TP
.B %d, %i
Print a signed decimal integer.
.TP
.B %u
Print an unsigned decimal integer.
.TP
.B %o
Print an unsigned octal integer.
.TP
.B %x, %X
Print an unsigned hexadecimal integer (lowercase / uppercase).
.TP
.B %p
Print a pointer address.
.TP
.B %%
Print a literal '%' character.
.PP
Unsupported conversion specifiers will be printed as-is.
.SH RETURN VALUE
The function returns the total number of characters printed (excluding the null byte used to end output strings). If an error occurs, a negative value is returned.
.SH EXAMPLES
.EX
_printf("Hello %s!\\n", "world");
     -> Hello world!
     
_printf("Value: %d\\n", 123);
     -> Value: 123
.EE
.SH SEE ALSO
.BR printf (3),
.BR putchar (3)
.SH AUTHORS
Project done by students of Holberton School.

